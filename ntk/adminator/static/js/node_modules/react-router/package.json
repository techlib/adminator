{
  "name": "react-router",
  "version": "1.0.0-rc3",
  "description": "A complete routing library for React.js",
  "main": "lib/index",
  "repository": {
    "type": "git",
    "url": "https://github.com/rackt/react-router.git"
  },
  "homepage": "https://rackt.github.io/react-router/",
  "bugs": {
    "url": "https://github.com/rackt/react-router/issues"
  },
  "scripts": {
    "build": "babel ./modules -d lib --ignore '__tests__'",
    "build-umd": "NODE_ENV=production webpack modules/index.js umd/ReactRouter.js",
    "build-min": "NODE_ENV=production webpack -p modules/index.js umd/ReactRouter.min.js",
    "lint": "eslint modules examples",
    "start": "node examples/server.js",
    "test": "npm run lint && karma start",
    "postinstall": "node -e \"require('fs').stat('lib', function (e, s) { process.exit(e || !s.isDirectory() ? 1 : 0) })\" || npm run build"
  },
  "authors": [
    "Ryan Florence",
    "Michael Jackson"
  ],
  "license": "MIT",
  "dependencies": {
    "history": "1.12.3",
    "invariant": "^2.0.0",
    "warning": "^2.0.0"
  },
  "devDependencies": {
    "assert": "1.3.0",
    "babel": "^5.4.7",
    "babel-core": "^5.4.7",
    "babel-eslint": "^3.1.23",
    "babel-loader": "^5.0.0",
    "bundle-loader": "^0.5.2",
    "css-loader": "^0.19.0",
    "eslint": "1.4.0",
    "eslint-plugin-react": "3.3.2",
    "expect": "1.10.0",
    "express": "^4.13.3",
    "express-urlrewrite": "^1.2.0",
    "karma": "^0.13.8",
    "karma-browserstack-launcher": "^0.1.4",
    "karma-chrome-launcher": "^0.2.0",
    "karma-firefox-launcher": "^0.1.6",
    "karma-mocha": "^0.2.0",
    "karma-mocha-reporter": "^1.1.1",
    "karma-sourcemap-loader": "^0.3.5",
    "karma-webpack": "^1.7.0",
    "mocha": "^2.0.1",
    "qs": "^4.0.0",
    "react": "0.13.x",
    "rf-changelog": "^0.4.0",
    "style-loader": "^0.12.4",
    "webpack": "^1.4.13",
    "webpack-dev-middleware": "^1.2.0"
  },
  "tags": [
    "react",
    "router"
  ],
  "keywords": [
    "react",
    "react-component",
    "routing",
    "route",
    "routes",
    "router"
  ],
  "readme": "[![build status](https://img.shields.io/travis/rackt/react-router/master.svg?style=flat-square)](https://travis-ci.org/rackt/react-router)\n[![npm package](https://img.shields.io/npm/v/react-router.svg?style=flat-square)](https://www.npmjs.org/package/react-router)\n[![react-router channel on slack](https://img.shields.io/badge/slack-react--router@reactiflux-61DAFB.svg?style=flat-square)](http://www.reactiflux.com)\n\n<img src=\"https://rackt.github.io/react-router/img/vertical.png\" width=\"300\"/>\n\nA complete routing library for React\n\nReact Router keeps your UI in sync with the URL. It has a simple API\nwith powerful features like lazy code loading, dynamic route matching,\nand location transition handling built right in. Make the URL your first\nthought, not an after-thought.\n\n### Docs & Help\n\n- [Guides and API Docs](/docs)\n- [Upgrade Guide](/UPGRADE_GUIDE.md)\n- [Changelog](/CHANGELOG.md)\n- [#react-router channel on reactiflux](http://www.reactiflux.com/)\n\n**Note:** *If you are still using React Router 0.13.x [the docs](https://github.com/rackt/react-router/tree/0.13.x/docs/guides) can be found on [the 0.13.x branch](https://github.com/rackt/react-router/tree/0.13.x).*\n\n### Browser Support\n\nWe support all browsers and environments where React runs.\n\n### Installation\n\n#### npm + webpack/browserify\n\n    $ npm install react-router@1.0.0-rc2\n\nThen with a module bundler or webpack, use as you would anything else:\n\n```js\n// using an ES6 transpiler, like babel\nimport { Router, Route, Link } from 'react-router'\n\n// not using an ES6 transpiler\nvar ReactRouter = require('react-router')\nvar Router = ReactRouter.Router\nvar Route = ReactRouter.Route\nvar Link = ReactRouter.Link\n```\n\nYou can require only the pieces you need straight from the `lib` directory:\n\n```js\nimport { Router } from 'react-router/lib/Router'\n```\n\nThere's also a UMD build in the `umd` directory:\n\n```js\nimport ReactRouter from 'react-router/umd/ReactRouter'\n```\n\nIf you're using globals, you can find the library on `window.ReactRouter`.\n\n#### CDN\n\nIf you just want to drop a `<script>` tag in your page and be done with it, you can use the UMD/global build [hosted on cdnjs](https://cdnjs.com/libraries/react-router).\n\n### What's it look like?\n\n```js\nimport React from 'react'\nimport { Router, Route, Link } from 'react-router'\n\nconst App = React.createClass({/*...*/})\nconst About = React.createClass({/*...*/})\n// etc.\n\nconst Users = React.createClass({\n  render() {\n    return (\n      <div>\n        <h1>Users</h1>\n        <div className=\"master\">\n          <ul>\n            {/* use Link to route around the app */}\n            {this.state.users.map(user => (\n              <li key={user.id}><Link to={`/user/${user.id}`}>{user.name}</Link></li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"detail\">\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n})\n\nconst User = React.createClass({\n  componentDidMount() {\n    this.setState({\n      // route components are rendered with useful information, like URL params\n      user: findUserById(this.props.params.userId)\n    })\n  },\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.user.name}</h2>\n        {/* etc. */}\n      </div>\n    )\n  }\n})\n\n// Declarative route configuration (could also load this config lazily\n// instead, all you really need is a single root route, you don't need to\n// colocate the entire config).\nReact.render((\n  <Router>\n    <Route path=\"/\" component={App}>\n      <Route path=\"about\" component={About}/>\n      <Route path=\"users\" component={Users}>\n        <Route path=\"/user/:userId\" component={User}/>\n      </Route>\n      <Route path=\"*\" component={NoMatch}/>\n    </Route>\n  </Router>\n), document.body)\n```\n\nSee more in the [Introduction](/docs/Introduction.md) and [Advanced Usage](/docs/guides/advanced/README.md).\n\n### Thanks\n\nReact Router was initially inspired by Ember's fantastic router. Many thanks to the Ember team.\n\nAlso, thanks to [BrowserStack](https://www.browserstack.com/) for providing the infrastructure that allows us to run our build in real browsers.\n",
  "readmeFilename": "README.md",
  "_id": "react-router@1.0.0-rc3",
  "_from": "react-router@"
}
